<?xml version="1.0" encoding="utf-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
         version="2.4">
	<display-name>52Â°North Web Processing Service, Git: ${git.revision} @ ${timestamp}</display-name>
	<description>A web processing framework supporting the OGC WPS 1.0.0 specification</description>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <context-param>
        <param-name>wps.config.file</param-name>
        <param-value>${wps.config.file}</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
	        <param-name>contextConfigLocation</param-name>
	        <param-value>classpath*:dispatcher-servlet.xml</param-value>
	    </init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	 
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- security-constraint>
		<web-resource-collection>
			<web-resource-name>My JSP</web-resource-name>
			<url-pattern>/webAdmin/index.jsp</url-pattern>
			<http-method>GET</http-method>
			<http-method>POST</http-method>
		</web-resource-collection>
		<auth-constraint>
			<role-name>wpsAdmin</role-name>
		</auth-constraint>
		<user-data-constraint>
			<transport-guarantee>CONFIDENTIAL</transport-guarantee>
		</user-data-constraint-->
	<!-- /security-constraint>

    <login-config>
    	<auth-method>BASIC</auth-method>
    	<realm-name>Basic Authentication</realm-name>
  	</login-config>

  	<Security roles referenced by this web application -->
  	<!-- >security-role>
    	<description>The role that is required to log in to the Manager Application</description>
    	<role-name>manager</role-name>
  	</security-role-->

 	<!--filter>
		<filter-name>CommunicationSizeLogFilter</filter-name>
		<filter-class>org.n52.wps.server.CommunicationSizeLogFilter</filter-class>
	</filter-->
	<!--filter>
		<filter-name>CompressingFilter</filter-name>
		<filter-class>com.planetj.servlet.filter.compression.CompressingFilter</filter-class>
		<init-param>
			<param-name>debug</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>statsEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CompressingFilter</filter-name>
		<url-pattern>/WebProcessingService</url-pattern>
	</filter-mapping-->
	<!-->filter-mapping>
		<filter-name>CommunicationSizeLogFilter</filter-name>
		<url-pattern>/WebProcessingService</url-pattern>
	</filter-mapping-->

<!--    <filter>
        <filter-name>ResponseURLFilter</filter-name>
        <filter-class>org.n52.wps.server.ResponseURLFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ResponseURLFilter</filter-name>
        <url-pattern>*</url-pattern>
    </filter-mapping>-->

	<!-- 52n Security -->
    <context-param>
        <param-name>security.config.validation</param-name>
        <param-value>false</param-value>
        <!--description>
           disables validation of the security-config.xml this is necessary
           because the MavenProject: org.n52.wps:52n-wps-webapp:3.3.0-SNAPSHOT @ D:\dev\GitHub4w\WPS\52n-wps-webapp\pom.xml mechanism works only if the validation is disabled.
       </description-->
    </context-param>

    <filter>
        <filter-name>CORS</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
        <init-param>
            <param-name>cors.allowOrigin</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowGenericHttpRequests</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedMethods</param-name>
            <param-value>GET, POST, HEAD, PUT, DELETE, OPTIONS</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedHeaders</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>cors.exposedHeaders</param-name>
            <param-value>*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CORS</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
 
    <filter>
        <filter-name>authn</filter-name>
        <display-name>Authentication Chain Filter</display-name>
       	<description>Delegates calls to AuthenticationChainFilter that is defined in the security-config.</description>
        <filter-class>org.n52.security.service.config.support.SecurityConfigDelegatingServletFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>authn</filter-name>
        <url-pattern>/webAdmin/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>org.n52.security.service.config.support.SecurityConfigContextListener</listener-class>
    </listener>
</web-app>