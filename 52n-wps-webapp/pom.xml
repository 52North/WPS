<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- $Id: pom.xml 2310 2012-04-12 14:07:04Z it-is-continuous-integration
		$ -->
	<parent>
		<groupId>org.n52.wps</groupId>
		<artifactId>52n-wps-parent</artifactId>
		<version>4.0.0-beta.6-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>52n-wps-webapp</artifactId>
	<packaging>war</packaging>
	<name>52North WPS Web Application</name>
	<mailingLists>
		<mailingList>
			<name>Geoprocessing</name>
			<archive>http://list.52north.org/pipermail/geoprocessingservices/</archive>
			<post>geoprocessingservices@52north.org</post>
			<subscribe>http://list.52north.org/mailman/listinfo/geoprocessingservices</subscribe>
			<unsubscribe>http://list.52north.org/mailman/listinfo/geoprocessingservices</unsubscribe>
		</mailingList>
		<mailingList>
			<name>Geoprocessing Commits</name>
			<archive>http://list.52north.org/pipermail/geoprocessing-commits</archive>
			<post>Geoprocessing-commits@52north.org</post>
			<subscribe>http://list.52north.org/mailman/listinfo/geoprocessing-commits</subscribe>
			<unsubscribe>http://list.52north.org/mailman/listinfo/geoprocessing-commits</unsubscribe>
		</mailingList>
	</mailingLists>

	<!-- here are the dependencies of the project -->
	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-commons</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-client-lib</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-io</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-server</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
				<exclusion>
					<artifactId>stax-api</artifactId>
					<groupId>stax</groupId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-algorithm</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>stax-api</artifactId>
					<groupId>stax</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-algorithm-impl</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-database</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-configuration-api</artifactId>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-algorithm</artifactId>
			<classifier>tests</classifier>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-configuration-api</artifactId>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.pjl-comp-filter</groupId>
			<artifactId>pjl-comp-filter</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>

		<!-- Dependencies for Scope 'test' -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-io-geotools</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-commons</artifactId>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-r</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<!-- provided since we want to use jcl-over-slf4j to shim jcl loggin into
				slf4j -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>runtime</scope>
		</dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
			<scope>runtime</scope>
		</dependency>
        <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>cors-filter</artifactId>
            <scope>runtime</scope>
        </dependency>
		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- End of Spring dependencies -->
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<artifactId>commons-io</artifactId>
			<groupId>commons-io</groupId>
		</dependency>
		<dependency>
			<artifactId>validation-api</artifactId>
			<groupId>javax.validation</groupId>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-extras</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<scope>runtime</scope>
		</dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <scope>runtime</scope>
        </dependency>
		<!-- Database dependencies -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<artifactId>xmlbeans</artifactId>
			<groupId>org.apache.xmlbeans</groupId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<artifactId>52n-xml-ows-v110</artifactId>
			<groupId>org.n52.sensorweb</groupId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<artifactId>52n-xml-wps-v100</artifactId>
			<groupId>org.n52.sensorweb</groupId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-api</artifactId>
            <scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-opengis</artifactId>
            <scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-coverage</artifactId>
            <scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>guava</artifactId>
			<groupId>com.google.guava</groupId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<artifactId>commons-codec</artifactId>
			<groupId>commons-codec</groupId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<artifactId>hamcrest-core</artifactId>
			<groupId>org.hamcrest</groupId>
            <scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>Rserve</artifactId>
			<groupId>org.nuiton.thirdparty</groupId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>jdom</artifactId>
			<groupId>org.jdom</groupId>
            <scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.n52.wps</groupId>
			<artifactId>52n-xml-wps-v20</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
            <groupId>se.jiderhamn.classloader-leak-prevention</groupId>
            <artifactId>classloader-leak-prevention-servlet3</artifactId>
         </dependency>
	</dependencies>

	<properties>
		<wps.logfile.name>${catalina.base:-.}/logs/52n-wps</wps.logfile.name>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<wps.db.initial-data.file>WEB-INF/classes/db/initial-data.sql</wps.db.initial-data.file>
	</properties>

	<build>
<!-- 	 Is not working atm. -->
<!-- 		<finalName>${wps.name}##${project.version}</finalName> -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>logback.xml</include>
					<include>applicationContext.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<configuration>
					<header>../misc/licenses/license_header.txt</header>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jasig.maven</groupId>
				<artifactId>maven-notice-plugin</artifactId>
				<executions>
					<execution>
						<id>check-licenses</id>
						<phase />
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<webResources>
						<resource>
							<directory>src/main/webapp/WEB-INF</directory>
							<filtering>true</filtering>
							<targetPath>WEB-INF</targetPath>
						</resource>
						<resource>
							<directory>src/main/webapp/config</directory>
							<filtering>true</filtering>
							<targetPath>config</targetPath>
						</resource>
						<resource>
							<directory>src/main/webapp/static</directory>
							<includes>
								<include>index.html</include>
							</includes>
							<filtering>true</filtering>
							<targetPath>static</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-Xmx1024m</argLine>
					<testFailureIgnore>true</testFailureIgnore>
					<systemProperties>
						<property>
							<name>catalina.base</name>
							<value>target/test-classes</value>
						</property>
						<property>
							<name>catalina.home</name>
							<value>target/test-classes</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>

			<plugin>
				<groupId>ru.concerteza.buildnumber</groupId>
				<artifactId>maven-jgit-buildnumber-plugin</artifactId>
				<version>1.2.7</version>
				<executions>
					<execution>
						<id>git-buildnumber</id>
						<goals>
							<goal>extract-buildnumber</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<runOnlyAtExecutionRoot>false</runOnlyAtExecutionRoot>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>with-deploy</id>
			<build>
				<finalName>WPS</finalName>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.4.9</version>
						<executions>
							<execution>
								<id>verify-deploy</id>
								<phase>install</phase>
								<goals>
									<goal>deployer-deploy</goal>
								</goals>
							</execution>
							<execution>
								<id>clean-undeploy</id>
								<phase>pre-clean</phase>
								<goals>
									<goal>deployer-undeploy</goal>
								</goals>
							</execution>
						</executions>

						<configuration>

							<!-- Container Configuration -->
							<container>
								<containerId>${conf.wps.deploy.containerId}</containerId>
								<type>remote</type>
							</container>

							<configuration>
								<type>runtime</type>
								<properties>
									<cargo.server.settings>${conf.wps.server.settings}</cargo.server.settings>
									<cargo.hostname>${conf.wps.remote.server}</cargo.hostname>
									<cargo.servlet.port>${conf.wps.remote.port}</cargo.servlet.port>
								</properties>

							</configuration>

							<!-- Deployer and Deployables configuration -->
							<!-- <deployer> -->
							<!-- <type>remote</type> -->

							<!-- </deployer> -->
							<deployables>
								<deployable>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<type>war</type>
								</deployable>
							</deployables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>integration-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.9</version>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>pre-integration-test</phase>
								<configuration>
									<portNames>
										<portName>jetty.http.port</portName>
										<portName>jetty.http.stop.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<version>1.5.3</version>
						<executions>
							<execution>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>replace</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<file>${project.build.directory}/${project.build.finalName}/${wps.db.initial-data.file}</file>
							<regex>false</regex>
							<replacements>
<!-- 								<replacement> -->
<!-- 									<token>hostport="8080"</token> -->
<!-- 									<value>hostport=""</value> -->
<!-- 								</replacement> -->
								<replacement>
									<token>('hostport','org.n52.wps.webapp.entities.Server','8080')</token>
									<value>('hostport','org.n52.wps.webapp.entities.Server','${jetty.http.port}')</value>
								</replacement>
							</replacements>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>9.3.2.v20150730</version>
						<configuration>
							<httpConnector>
								<port>${jetty.http.port}</port>
								<idleTimeout>60000</idleTimeout>
							</httpConnector>
							<stopPort>${jetty.http.stop.port}</stopPort>
							<stopKey>STOP</stopKey>
							<stopWait>5</stopWait>
							<webApp>
								<contextPath>/wps</contextPath>
							</webApp>
							<systemProperties>
								<systemProperty>
									<name>catalina.base</name>
									<value>${project.build.directory}</value>
								</systemProperty>
								<systemProperty>
									<name>catalina.home</name>
									<value>${project.build.directory}</value>
								</systemProperty>
							</systemProperties>
						</configuration>
						<executions>
							<execution>
								<id>start-jetty</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>deploy-war</goal>
								</goals>
								<configuration>
									<war>${project.build.directory}/${project.build.finalName}</war>
									<scanIntervalSeconds>0</scanIntervalSeconds>
									<daemon>true</daemon>
								</configuration>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.17</version>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>**/Wps4r*IT*</exclude>
										<exclude>**/GrassIT*</exclude>
									</excludes>

									<argLine>-Xmx1024m</argLine>
									<summaryFile>target/failsafe-reports/failsafe-summary.xml</summaryFile>
									<systemPropertyVariables>
										<com.sun.media.jai.disableMediaLib>true</com.sun.media.jai.disableMediaLib>
										<test.host>127.0.0.1</test.host>
										<!-- <test.rserve.host>127.0.0.1</test.rserve.host> <test.rserve.port>6311</test.rserve.port>
											<test.rserve.user></test.rserve.user> <test.rserve.pwd></test.rserve.pwd> -->
										<test.port>${jetty.http.port}</test.port>
										<test.context>/wps/WebProcessingService</test.context>
										<catalina.home>${project.build.directory}</catalina.home>
										<catalina.base>${project.build.directory}</catalina.base>
									</systemPropertyVariables>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>with-geotools</id>
			<properties>
				<wps.config.file>WEB-INF/config/wps_config_geotools.xml</wps.config.file>
			</properties>
			<build>
				<!--<plugins> <plugin> <artifactId>maven-war-plugin</artifactId> <configuration>
					<classifier>geotools</classifier> </configuration> </plugin> </plugins> -->
			</build>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-io-geotools</artifactId>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-algorithm-geotools</artifactId>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-r</artifactId>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-grass</artifactId>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-sextante</artifactId>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<artifactId>Rserve</artifactId>
					<groupId>org.nuiton.thirdparty</groupId>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>org.geotools</groupId>
					<artifactId>gt-opengis</artifactId>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>org.geotools</groupId>
					<artifactId>gt-coverage</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
