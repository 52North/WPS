<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- $Id: pom.xml 2310 2012-04-12 14:07:04Z it-is-continuous-integration
		$ -->
	<parent>
		<groupId>org.n52.wps</groupId>
		<artifactId>52n-wps-parent</artifactId>
		<version>3.3.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>52n-wps-webapp</artifactId>
	<packaging>war</packaging>
	<name>52North WPS Web Application</name>
	<mailingLists>
		<mailingList>
			<name>Geoprocessing</name>
			<archive>http://list.52north.org/pipermail/geoprocessingservices/</archive>
			<post>geoprocessingservices@52north.org</post>
			<subscribe>http://list.52north.org/mailman/listinfo/geoprocessingservices</subscribe>
			<unsubscribe>http://list.52north.org/mailman/listinfo/geoprocessingservices</unsubscribe>
		</mailingList>
		<mailingList>
			<name>Geoprocessing Commits</name>
			<archive>http://list.52north.org/pipermail/geoprocessing-commits</archive>
			<post>Geoprocessing-commits@52north.org</post>
			<subscribe>http://list.52north.org/mailman/listinfo/geoprocessing-commits</subscribe>
			<unsubscribe>http://list.52north.org/mailman/listinfo/geoprocessing-commits</unsubscribe>
		</mailingList>
	</mailingLists>

	<!-- here are the dependencies of the project -->
	<dependencies>
		<!-- Dependencies for Scope 'test' -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-client-lib</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-io</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-server</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
				<exclusion>
					<artifactId>stax-api</artifactId>
					<groupId>stax</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-server-soap</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-algorithm</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>stax-api</artifactId>
					<groupId>stax</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-algorithm-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-database</artifactId>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-webadmin</artifactId>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.pjl-comp-filter</groupId>
			<artifactId>pjl-comp-filter</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.n52.security</groupId>
			<artifactId>52n-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.n52.security</groupId>
			<artifactId>52n-security-authentication</artifactId>
		</dependency>
		<dependency>
			<groupId>org.n52.security</groupId>
			<artifactId>52n-security-authn-web</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-io-geotools</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>52n-wps-r</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<!-- provided since we want to use jcl-over-slf4j to shim jcl loggin into
				slf4j -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2-transport-local</artifactId>
            <exclusions>
            	<exclusion>
            		<artifactId>wsdl4j</artifactId>
            		<groupId>wsdl4j</groupId>
            	</exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2-transport-http</artifactId>
        </dependency>
		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-saaj</artifactId>
		</dependency>
		<dependency>
			<groupId>axis</groupId>
            <artifactId>axis-wsdl4j</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
		</dependency>
        <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>cors-filter</artifactId>
            <scope>runtime</scope>
        </dependency>
	</dependencies>

	<properties>
		<wps.logfile.name>${catalina.base:-.}/logs/52n-wps</wps.logfile.name>
		<wps.config.file>config/wps_config.xml</wps.config.file>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
	</properties>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>logback.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<configuration>
					<header>../misc/licenses/license_header.txt</header>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jasig.maven</groupId>
				<artifactId>maven-notice-plugin</artifactId>
				<executions>
					<execution>
						<id>check-licenses</id>
						<phase></phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<webResources>
						<resource>
							<directory>src/main/webapp/WEB-INF</directory>
							<filtering>true</filtering>
							<targetPath>WEB-INF</targetPath>
						</resource>
						<resource>
							<directory>src/main/webapp/config</directory>
							<filtering>true</filtering>
							<targetPath>config</targetPath>
						</resource>
						<resource>
							<directory>src/main/webapp/</directory>
							<includes>
								<include>index.html</include>
							</includes>
							<filtering>true</filtering>
							<targetPath>/</targetPath>
						</resource>
						<resource>
							<directory>src/main/webapp/webAdmin</directory>
							<filtering>true</filtering>
							<targetPath>webAdmin</targetPath>
							<includes>
                				<include>**/*.jsp</include>
              				</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.4</version>
				<configuration>
					<argLine>-Xmx1024m</argLine>
					<testFailureIgnore>true</testFailureIgnore>
					<!-- NOTE: extra properties required for unit tests using our log4j.properties -->
					<systemProperties>
						<property>
							<name>catalina.base</name>
							<value>target/test-classes</value>
						</property>
						<property>
							<name>catalina.home</name>
							<value>target/test-classes</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>

			<plugin>
				<groupId>ru.concerteza.buildnumber</groupId>
				<artifactId>maven-jgit-buildnumber-plugin</artifactId>
				<version>1.2.7</version>
				<executions>
					<execution>
						<id>git-buildnumber</id>
						<goals>
							<goal>extract-buildnumber</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<runOnlyAtExecutionRoot>false</runOnlyAtExecutionRoot>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<!-- <profile> -->
		<!-- use war:exploded without copying the libs! an with no jar file -->
		<!-- <id>no-libs</id> -->
		<!-- <build> -->
		<!-- <plugins> -->
		<!-- <plugin> -->
		<!-- <inherited>true</inherited> -->
		<!-- <groupId>org.apache.maven.plugins</groupId> -->
		<!-- <artifactId>maven-war-plugin</artifactId> -->
		<!-- <version>2.2</version> -->
		<!-- <executions> -->
		<!-- <execution> -->
		<!-- <id>default-war</id> -->
		<!-- <phase>none</phase> -->
		<!-- </execution> -->
		<!-- <execution> -->
		<!-- <id>war-exploded</id> -->
		<!-- <phase>package</phase> -->
		<!-- <goals> -->
		<!-- <goal>exploded</goal> -->
		<!-- </goals> -->
		<!-- </execution> -->
		<!-- </executions> -->

		<!-- http://stackoverflow.com/a/5805046/261210 -->
		<!-- <configuration> -->
		<!-- <overlays> -->
		<!-- <overlay> -->
		<!-- <groupId>org.n52.wps</groupId> -->
		<!-- <excludes> -->
		<!-- <exclude>WEB-INF/lib/*.jar</exclude> -->
		<!-- </excludes> -->
		<!-- </overlay> -->
		<!-- </overlays> -->
		<!-- </configuration> -->
		<!-- </plugin> -->
		<!-- </plugins> -->
		<!-- </build> -->
		<!-- </profile> -->
		<profile>
			<id>with-deploy</id>
			<!-- server configuration for settings.xml =====================================
				<server> <id>loho</id> <configuration> <cargo.remote.username>admin</cargo.remote.username>
				<cargo.remote.password>admin</cargo.remote.password> </configuration> </server>
				<profile> <id>wps-localhost</id> <properties> <conf.wps.server.settings>loho</conf.wps.server.settings>
				<conf.wps.remote.server>localhost</conf.wps.remote.server> <conf.wps.remote.port>8080</conf.wps.remote.port>
				<conf.wps.deploy.containerId>tomcat7x</conf.wps.deploy.containerId> </properties>
				</profile> tomcat-users.xml ================ <user name="admin" password="admin"
				roles="admin-gui,manager-gui,admin-script,manager-script" /> Run with Maven
				(Run Configuration in Eclipse) =============================================
				- start Tomcat - mvn install -Pwps-localhost,with-deploy Remote Debugging
				in Eclipse =========================== Add Java options to Tomcat: -Xdebug
				-Xrunjdwp:transport=dt_socket,address=11111,server=y,suspend=n Add new Remote
				Java Application as debugging configuration and use the address above as
				the connection port. -->
			<build>
				<finalName>WPS</finalName>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.2.4</version>
						<executions>
							<execution>
								<id>verify-deploy</id>
								<phase>install</phase>
								<goals>
									<goal>deployer-deploy</goal>
								</goals>
							</execution>
							<execution>
								<id>clean-undeploy</id>
								<phase>pre-clean</phase>
								<goals>
									<goal>deployer-undeploy</goal>
								</goals>
							</execution>
						</executions>

						<configuration>

							<!-- Container Configuration -->
							<container>
								<containerId>${conf.wps.deploy.containerId}</containerId>
								<type>remote</type>
							</container>

							<configuration>
								<type>runtime</type>
								<properties>
									<cargo.server.settings>${conf.wps.server.settings}</cargo.server.settings>
									<cargo.hostname>${conf.wps.remote.server}</cargo.hostname>
									<cargo.servlet.port>${conf.wps.remote.port}</cargo.servlet.port>
								</properties>

							</configuration>

							<!-- Deployer and Deployables configuration -->
							<!-- <deployer> -->
							<!-- <type>remote</type> -->

							<!-- </deployer> -->
							<deployables>
								<deployable>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<type>war</type>
								</deployable>
							</deployables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>integration-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>pre-integration-test</phase>
								<configuration>
									<portNames>
										<portName>jetty.http.port</portName>
										<portName>jetty.http.stop.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<version>1.5.2</version>
						<executions>
							<execution>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>replace</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<file>${project.build.directory}/${project.build.finalName}/${wps.config.file}</file>
							<regex>false</regex>
							<replacements>
								<replacement>
									<token>hostport="8080"</token>
									<value>hostport="${jetty.http.port}"</value>
								</replacement>
							</replacements>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>9.1.2.v20140210</version>
						<configuration>
							<httpConnector>
								<port>${jetty.http.port}</port>
								<idleTimeout>60000</idleTimeout>
							</httpConnector>
							<stopPort>${jetty.http.stop.port}</stopPort>
							<stopKey>STOP</stopKey>
							<stopWait>5</stopWait>
							<webApp>
								<contextPath>/wps</contextPath>
							</webApp>
							<systemProperties>
								<systemProperty>
									<name>catalina.base</name>
									<value>${project.build.directory}</value>
								</systemProperty>
								<systemProperty>
									<name>catalina.home</name>
									<value>${project.build.directory}</value>
								</systemProperty>
							</systemProperties>
						</configuration>
						<executions>
							<execution>
								<id>start-jetty</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>deploy-war</goal>
								</goals>
								<configuration>
									<war>${project.build.directory}/${project.build.finalName}</war>
									<scanIntervalSeconds>0</scanIntervalSeconds>
									<daemon>true</daemon>
								</configuration>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.12.4</version>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>**/Wps4rIT*</exclude>
										<exclude>**/GrassIT*</exclude>
									</excludes>

									<argLine>-Xmx1024m</argLine>
									<summaryFile>target/failsafe-reports/failsafe-summary.xml</summaryFile>
									<systemPropertyVariables>
										<com.sun.media.jai.disableMediaLib>true</com.sun.media.jai.disableMediaLib>
										<test.host>127.0.0.1</test.host>
										<!-- <test.rserve.host>127.0.0.1</test.rserve.host> <test.rserve.port>6311</test.rserve.port>
											<test.rserve.user></test.rserve.user> <test.rserve.pwd></test.rserve.pwd> -->
										<test.port>${jetty.http.port}</test.port>
										<test.context>/wps/WebProcessingService</test.context>
										<catalina.home>${project.build.directory}</catalina.home>
										<catalina.base>${project.build.directory}</catalina.base>
									</systemPropertyVariables>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>with-geotools</id>
			<properties>
				<wps.config.file>config/wps_config_geotools.xml</wps.config.file>
			</properties>
			<build>
				<!--<plugins> <plugin> <artifactId>maven-war-plugin</artifactId> <configuration>
					<classifier>geotools</classifier> </configuration> </plugin> </plugins> -->
			</build>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-ags</artifactId>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-python</artifactId>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-io-geotools</artifactId>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-algorithm-geotools</artifactId>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-r</artifactId>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-grass</artifactId>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-mc</artifactId>
					<exclusions>
						<exclusion>
							<artifactId>xml-apis</artifactId>
							<groupId>xml-apis</groupId>
						</exclusion>
					</exclusions>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-sextante</artifactId>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>52n-wps-transactional</artifactId>
					<exclusions>
						<exclusion>
							<artifactId>xmlParserAPIs</artifactId>
							<groupId>xerces</groupId>
						</exclusion>
						<exclusion>
							<artifactId>stax-api</artifactId>
							<groupId>stax</groupId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<activation>
				<property>
					<name>include.wps.config.file</name>
				</property>
			</activation>
			<properties>
				<wps.config.file>config/wps_config.xml</wps.config.file>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>copy-external-wps-config</id>
								<configuration>
									<copy overwrite="true" file="${include.wps.config.file}"
										tofile="${project.build.directory}/${project.build.finalName}/config/wps_config.xml" />
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
