<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- $Id: pom.xml,v 1.1.2.2 2007/05/26 23:01:56 schaeffer Exp $ -->
	<parent>
		<groupId>org.n52.wps</groupId>
		<artifactId>52n-wps-parent</artifactId>
		<version>3.1-SNAPSHOT</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.n52.wps</groupId>
	<artifactId>52n-wps-r</artifactId>
	<packaging>jar</packaging>
	<name>52North WPS4R</name>
	<description>The project WPS4R provides functionalities of R as WPS processes.</description>

	<inceptionYear>2010</inceptionYear>

	<mailingLists>
		<mailingList>
			<name>Geoprocessing</name>
			<archive>http://www2.52north.org/pipermail/geoprocessingservices/</archive>
			<post>geoprocessingservices@52north.org</post>
			<subscribe>http://www2.52north.org/mailman/listinfo/geoprocessingservices</subscribe>
			<unsubscribe>http://www2.52north.org/mailman/listinfo/geoprocessingservices</unsubscribe>
		</mailingList>
	</mailingLists>
	<developers>
		<developer>
			<id>MatthiasHinz</id>
			<name>Matthias Hinz</name>
			<email>m.hinz@52north.org</email>
			<timezone>+2</timezone>
			<organization>52°North GmbH</organization>
			<organizationUrl>http://52north.org</organizationUrl>
			<roles>
				<role>Member of Geoprocessing community</role>
				<role>Leader in WPS4R development</role>
				<role>Java Developer</role>
			</roles>
		</developer>
		<developer>
			<id>DanielNuest</id>
			<name>Daniel Nüst</name>
			<email>d.nuest@52north.org</email>
			<timezone>+2</timezone>
			<organization>52°North GmbH</organization>
			<organizationUrl>http://52north.org</organizationUrl>
			<roles>
				<role>Member of Geoprocessing community</role>
				<role>Java Developer</role>
			</roles>
		</developer>
	</developers>

	<build>
		<!--resources> <resource> <directory>src/main/resources</directory> <includes> 
			<include>**/*.xml</include> </includes> </resource> </resources -->

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<includes>
						<include>
							org/n52/wps/server/**
						</include>
						<include>
							org/n52/wps/util/**
						</include>
						<include>
							org/n52/wps/r-project/**
						</include>
					</includes>
				</configuration>
			</plugin>
			
			<plugin>
				<!-- check for correct source file headers during test phase: http://code.google.com/p/maven-license-plugin/wiki/HowTo -->
				<!-- run "mvn license:check -Dyear=2011" to check -->
				<!-- run "mvn license:format -Dyear=2011" to add to the files -->
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.9.0</version>
				<configuration>
					<header>src/main/resources/52N_license.txt</header>
					<excludes>
						<exclude>**/log4j*</exclude>
						<exclude>**/test/resources/**</exclude>
					</excludes>
					<includes>
						<include>**/*.java</include>
						<include>**/*.properties</include>
						<include>**/*.jsp</include>
						<include>**/*.js</include>
						<include>**/*.xml</include>
						<include>**/*.xsl</include>
					</includes>
					<strictCheck>true</strictCheck>
					<properties>
						<year>${project.inceptionYear}</year>
					</properties>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<!-- test will fail if license headers are not correct, run license:format 
							to add the headers. -->
						<goals>
							<goal>check</goal>
							<!-- <goal>format</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
	
	<profiles>
		<!-- Here some profiles for specific environments Naming convention: env-[environmentname] 
			means you can simple activate the profile by adding -Denv=[environmentname] 
			at the commandline. -->
		<profile>

		</profile>
	</profiles>

	<!-- here are the dependencies of the project -->
	<dependencies>
		<!-- Dependencies for Scope 'test' -->
		<dependency>
			<!-- junit for the unit tests -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<!-- Dependencies for Scope 'compile' -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.0.4</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.n52.wps</groupId>
			<artifactId>52n-wps-server</artifactId>
		</dependency>

		<!-- R dependencies -->
		<dependency>
			<groupId>org.n52.wps</groupId>
			<artifactId>52n-wps-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>org.rosuda</groupId>
			<artifactId>REngine</artifactId>
			<version>0.6-7</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.rosuda</groupId>
			<artifactId>RserveEngine</artifactId>
			<version>0.6-7</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- end R dependencies -->

	</dependencies>
	<!-- here are default properties, can be overwritten by profiles -->

	<repositories>
		<repository>
			<!-- Tentative local repo for libs that are not migrated to Maven dependency 
				mechanism and available in online repositories. -->
			<id>lib-repository</id>
			<name>Local Repository</name>
			<url>file:///${basedir}/lib-repository/</url>
		</repository>

	</repositories>


</project>
